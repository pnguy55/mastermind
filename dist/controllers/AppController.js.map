{"version":3,"sources":["../../src/controllers/AppController.js"],"names":["RandomNumberController","constructor","gameDao","GameDao","guessDao","GuessDao","playerDao","PlayerDao","home","req","res","game","search","activeGame","length","redirect","gameId","render","title","message","err","startGame","body","player1","player2","player3","player4","Error","players","push","playerCount","playerCreatesCount","playerCreateInfos","name","shift","gameCreateInfo","gameCreateMessage","create","playerCreateInfo","gameRoom","params","query","error","parseInt","id","replace","gameMessage","fetchActiveWithPlayersAndGuesses","emoji","String","fromCodePoint","combination","winner","guessesByPlayer","forEach","guesses","map","guess","feedback","gameRoomMessage","page","guessesRemaining","turnCount","score","buttonMessage","playRound","guessCreateInfos","Object","keys","playerInfos","count","player","currentGuess","num","isNaN","numAsInt","guessCreateObject","playerId","guessCreateInfo","currentGame","congratulations","restart","deleteAll"],"mappings":"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","file":"AppController.js","sourcesContent":["import verify from '../helpers/verifyMandatoryFieldsDefined';\nimport verifyInteger from '../helpers/verifyInteger';\nimport GameDao from '../data/GameDao';\nimport PlayerDao from '../data/PlayerDao';\nimport GuessDao from '../data/GuessDao';\n\nexport default class RandomNumberController {\n\tconstructor() {\n    this.gameDao = new GameDao();\n\t\tthis.guessDao = new GuessDao();\n\t\tthis.playerDao = new PlayerDao();\n\t}\n\n\tasync home(req, res) {\n\n\t\t// fetch game interface\n\t\ttry {\n\n      const game = await this.gameDao.search({});\n      const activeGame = game.length > 0;\n\n      if(activeGame) {\n\t\t\t\tres.redirect(`/:${game[0].gameId}`);\n      }\n      else {\n        res.render('index', { title: 'Hey', message: 'No game!' })\n\t\t\t\t// show list of high scores - check history of players with create new game button on top\n\t\t\t\t// input player names by separated by a new line\n\t\t\t\t// create new game - post /api/game\n\t\t\t\t// use return from create to\n\t\t\t\t// redirect to /:id (gameId)\n\n      }\n\t\t} catch(err){\n\t\t\tres.render('error', { title: 'Hey', message: err.message});\n\t\t}\n\t}\n\n\tasync startGame(req, res) {\n\t\tconst { body } = req;\n\n\n\t\tconst game = await this.gameDao.search({});\n\t\tconst activeGame = game.length > 0;\n\n\t\tif(activeGame) {\n\t\t\tres.redirect(`/restart`);\n\t\t}\n\n\n\t\tlet { player1, player2, player3, player4 } = body;\n\n\t\t// Validate request\n\t\ttry {\n\t\t\tif(player1 === '' && player2 === ''  && player3 === ''  && player4 === '' ) throw new Error('Please input at least one player!' )\n\n\t\t} catch(err) {\n\t\t\tres.render('index', { title: 'Hey', message: err.message })\n\t\t\treturn;\n\t\t}\n\n\t\tconst players = [];\n\t\tif(player1 !== '') players.push(player1);\n\t\tif(player2 !== '') players.push(player2);\n\t\tif(player3 !== '') players.push(player3);\n\t\tif(player4 !== '') players.push(player4);\n\n\t\tlet playerCount = players.length;\n\t\tlet playerCreatesCount = playerCount;\n\t\tconst playerCreateInfos = [];\n\n\t\twhile(playerCreatesCount > 0) {\n\t\t\tplayerCreateInfos.push({\n\t\t\t\tname: players.shift(),\n\t\t\t})\n\t\t\tplayerCreatesCount--;\n\t\t}\n\n\t\tconst gameCreateInfo = {\n\t\t\tplayerCount: playerCount, // integer\n\t\t}\n\n\t\t// access dao to create game\n\t\ttry {\n\t\t\tconst gameCreateMessage = await this.gameDao.create(gameCreateInfo)\n\n\t\t\tfor(const playerCreateInfo of playerCreateInfos) {\n\t\t\t\tawait this.playerDao.create(playerCreateInfo);\n\t\t\t}\n\t\t\tres.redirect(`/:${gameCreateMessage.gameId}`);\n\t\t} catch(err) {\n\t\t\tres.render('error', { title: 'Hey', message: err.message});\n\t\t}\n\t}\n\n\tasync gameRoom(req, res) {\n\t\tconst { params, query } = req;\n\n\t\tlet error;\n\t\tif(query.error) {\n\t\t\terror = query.error;\n\t\t}\n\n\t\tlet gameId;\n\t\t// Validate request\n\t\ttry {\n\t\t\tverify(params, ['id']);\n\t\t\tgameId = parseInt(params.id.replace(':',''));\n\t\t\tverifyInteger(gameId);\n\t\t} catch(err) {\n\t\t\tres.render('error', { title: 'Hey', message: err.message});\n\t\t\treturn;\n\t\t}\n\n\t\tconst gameMessage = await this.gameDao.fetchActiveWithPlayersAndGuesses();\n\t\tconst game = gameMessage[0];\n\n\t\tconst { players } = game;\n\t\t\n\t\tconst emoji = String.fromCodePoint(0x1F648);\n\t\tconst combination = `${emoji} | ${emoji} | ${emoji} | ${emoji}`\n\n\t\tif(game.winner) {\n\t\t\tcombination = game.combination;\n\t\t}\n\t\t\n\t\tlet guessesByPlayer = {};\n\t\tplayers.forEach(({name, guesses}) => {\n\t\t\tguessesByPlayer[name] = guesses.map(({guess, feedback}) => { return {guess, feedback} } );\n\t\t})\n\n\t\tconst gameRoomMessage = { \n\t\t\tpage: 'Game Room', \n\t\t\tcombination: combination,\n\t\t\terror: error || ``,\n\t\t\tguessesRemaining: `${10 - game.turnCount}`,\n\t\t\tplayers: players.map(({name, score}) => { return {name, score}}),\n\t\t\tguesses: guessesByPlayer,\n\t\t\tbuttonMessage: players.length > 1 ? 'guesses' : 'guess',\n\t\t}\n\n\t\tres.render('gameRoom', gameRoomMessage)\n\n\t}\n\n\tasync playRound(req, res) {\n\t\tconst { body  } = req;\n\n\t\tconst guessCreateInfos = [];\n\t\tlet gameId;\n\t\ttry {\n\t\t\tlet players = Object.keys(body);\n\n\t\t\tlet playerInfos = await this.playerDao.search({});\n\t\t\tgameId = playerInfos[0].gameId;\n\t\t\tlet count = 0;\n\t\t\tfor(const player of players) {\n\t\t\t\tconst currentGuess = body[player].replace(/\\ /g, '').replace(/\\|/g, '');\n\t\t\t\t\n\t\t\t\tif(currentGuess === '') throw new Error('Everyone must make a guess!');\n\t\t\t\tif(currentGuess.length !== 4) throw new Error('Guess must be 4 digits long, or separated by pipes -> |')\n\n\t\t\t\tfor(const num of currentGuess) {\n\t\t\t\t\tif(isNaN(num)) {\n\t\t\t\t\t\tthrow new Error('Your guess must contain only digits.');\n\t\t\t\t\t}\n\t\t\t\t\tlet numAsInt = parseInt(num)\n\t\t\t\t\tif(numAsInt < 0 || numAsInt > 7) {\n\t\t\t\t\t\tthrow new Error('Each number of your guess must be between 0 and 7 (Inclusively)');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst guessCreateObject = {\n\t\t\t\t\tplayerId: playerInfos[count++].playerId,\n\t\t\t\t\tguess: body[player]\n\t\t\t\t}\n\n\t\t\t\tguessCreateInfos.push(guessCreateObject);\n\t\t\t\n\t\t\t}\n\n\t\t} catch(err) {\n\t\t\tres.redirect(`/:${gameId}?error=${err.message}`);\n\t\t\treturn;\n\t\t}\n\n\n\t\t// access dao to create game\n\t\ttry {\n\n\t\t\tfor(const guessCreateInfo of guessCreateInfos) {\n\t\t\t\tawait this.guessDao.create(guessCreateInfo);\n\t\t\t}\n\n\t\t\tconst currentGame = await this.gameDao.search({}, 1, 0, false, true);\n\t\t\tif(currentGame[0].winner) {\n\t\t\t\tconst {winner, combination} = currentGame[0];\n\t\t\t\tres.redirect(`/congratulations?winner=${winner}&combination=${combination}`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.redirect(`/:${gameId}`);\n\t\t} catch(err) {\n\t\t\tres.redirect(`/:${gameId}?${err}`);\n\t\t}\n\t}\n\n\tasync congratulations(req, res) {\n\t\tconst { query } = req;\n\n\t\tlet winner;\n\t\tlet combination;\n\t\t// Validate request\n\t\ttry {\n\t\t\tverify(query, ['winner', 'combination']);\n\n\t\t\twinner = query.winner.replace(':','').replace('%20', ' ');\n\t\t\tcombination = query.combination.replace(/%7C/g, '|');\n\t\t} catch(err) {\n\t\t\tres.render('error', { title: 'Hey', message: err.message});\n\t\t\treturn;\n\t\t}\n\n\t\tres.render('congratulations', {\n\t\t\twinner,\n\t\t\tcombination\n\t\t})\n\t}\n\n\tasync restart(req, res) {\n\n\t\ttry {\n\t\t\tawait this.gameDao.deleteAll();\n\t\t\t\n\t\t\tres.render('index', { title: 'Hey', message: 'No game!' })\n\t\t} catch(err) {\n\t\t\tres.render('error', { title: 'Hey', message: err.message});\n\t\t\treturn;\n\t\t}\n\t}\n}\n"]}