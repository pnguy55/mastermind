{"version":3,"sources":["../../src/controllers/PlayerController.js"],"names":["PlayerController","constructor","playerDao","PlayerDao","create","req","res","body","name","err","status","send","message","playerCreateInfo","playerCreateMessage","setHeader","JSON","stringify","search","query","limit","offset","isHistorical","playerName","gameId","undefined","parseInt","parse","toLowerCase","playerSearchCriteria","playerSearchResults","fetch","params","playerId","id","replace","playerFetchResult","update","score","turnNumber","playerUpdateInfo","playerUpdateResult","delete","deleteAll","playerDeleteAllResult"],"mappings":"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","file":"PlayerController.js","sourcesContent":["import verify from '../helpers/verifyMandatoryFieldsDefined';\nimport verifyInteger from '../helpers/verifyInteger';\nimport PlayerDao from '../data/PlayerDao';\n\nexport default class PlayerController {\n\tconstructor() {\n\t\tthis.playerDao = new PlayerDao();\n\t}\n\n\tasync create(req, res) {\n\t\tconst { body } = req;\n\t\tlet { name } = body;\n\t\t// Validate request\n\t\ttry {\n\t\t\tverify(\n\t\t\t\tbody, \n\t\t\t\t[\n\t\t\t\t\t'name',\n\t\t\t\t]\n\t\t\t);\n\t\t} catch(err) {\n\t\t\tres.status(400).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst playerCreateInfo = {\n\t\t\tname: name, // string\n\t\t}\n\n\t\t// access dao to create player\n\t\ttry {\n\t\t\tconst playerCreateMessage = await this.playerDao.create(playerCreateInfo)\n\t\t\t\t\n\t\t\tres.setHeader('Content-Type', 'application/json');\n\t\t\tres.send(JSON.stringify(playerCreateMessage, null, 2));\n\t\t} catch(err) {\n\t\t\tres.status(500).send({\n        message: err.message,\n      });\n\t\t}\n\t}\n\n\tasync search(req, res) {\n\n\t\tconst { query } = req;\n\t\tlet { limit, offset, isHistorical, playerName, gameId} = query;\n\t\t// validate params\n\t\ttry {\n\t\t\tif(limit !== undefined) {\n\t\t\t\tlimit = parseInt(limit);\n\t\t\t\tverifyInteger(limit, 'limit');\n\t\t\t}\n\t\t\tif(offset !== undefined) {\n\t\t\t\toffset = parseInt(offset);\n\t\t\t\tverifyInteger(offset, 'offset');\n\t\t\t}\n\t\t\tif(gameId !== undefined) {\n\t\t\t\tgameId = parseInt(gameId);\n\t\t\t\tverifyInteger(gameId, 'gameId');\n\t\t\t}\n\t\t\tif(isHistorical === undefined) {\n\t\t\t\tisHistorical = false;\n\t\t\t} else {\n\t\t\t\tisHistorical = JSON.parse(isHistorical.toLowerCase()) ? true : false;\t\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tres.status(400).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst playerSearchCriteria = {\n      gameId: gameId, // integer, exact match\n\t\t\tplayerName: playerName, // string, exact match\n\t\t}\n\n\t\ttry {\n\t\t\tconst playerSearchResults = await this.playerDao.search(playerSearchCriteria, limit, offset, isHistorical);\n\t\t\t\n\t\t\tres.setHeader('Content-Type', 'application/json');\n\t\t\tres.send(JSON.stringify(playerSearchResults, null, 2));\n\t\t} catch(err) {\n\t\t\tres.status(500).send({\n\t\t\t\tmessage:\n\t\t\t\t\terr.message,\n\t\t\t});\n\t\t}\n\t}\n\n\tasync fetch(req, res) {\n\t\tconst { params } = req;\n\n\t\tlet playerId;\n\t\t// Validate request\n\t\ttry {\n\t\t\tverify(params, ['id']);\n\t\t\tplayerId = parseInt(params.id.replace(':',''));\n\t\t\tverifyInteger(playerId);\n\t\t} catch(err) {\n\t\t\tres.status(400).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// fetch player\n\t\ttry {\n\t\t\tconst playerFetchResult = await this.playerDao.fetch(playerId);\n\t\t\tif(playerFetchResult !== undefined) {\t\t\t\n\t\t\t\tres.setHeader('Content-Type', 'application/json');\n\t\t\t\tres.send(JSON.stringify(playerFetchResult, null, 2));\n\t\t\t}\n\t\t} catch(err){\n\t\t\tres.status(404).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t}\n\t}\n\n\tasync update(req, res) {\n\t\tconst { body, params } = req;\n\t\tlet { name, score, turnNumber } = body;\n\n\t\t// Validate request\n\t\tlet playerId;\n\t\ttry {\n\t\t\tverify(params, ['id']);\t\t\t\n\t\t\tplayerId = parseInt(params.id.replace(':',''));\n\t\t\tverifyInteger(playerId);\n\n\t\t\tif(score !== undefined) {\n\t\t\t\tscore = parseInt(score);\n\t\t\t\tverifyInteger(score, 'score');\n\t\t\t}\n\t\t\tif(turnNumber !== undefined) {\n\t\t\t\tturnNumber = parseInt(turnNumber);\n\t\t\t\tverifyInteger(turnNumber, 'turnNumber');\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tres.status(400).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst playerUpdateInfo = {\n\t\t\tname: name,\n\t\t\tscore: score,\n\t\t\tturnNumber: turnNumber,\n\t\t}\n\n\t\ttry {\n\t\t\t// Returns number of players updated.\n\t\t\tconst playerUpdateResult = await this.playerDao.update(playerId,\tplayerUpdateInfo);\n\n\t\t\tif (playerUpdateResult !== undefined) {\t\t\t\n\t\t\t\tres.setHeader('Content-Type', 'application/json');\n\t\t\t\tres.send(JSON.stringify(playerUpdateResult, null, 2));\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tres.status(500).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t}\n\t}\n\n\tasync delete(req, res) {\n\t\tconst { params } = req;\n\n\t\tlet playerId;\n\t\t// Validate request\n\t\ttry {\n\t\t\tverify(params, ['id']);\n\t\t\tplayerId = parseInt(params.id.replace(':',''));\n\t\t\tverifyInteger(playerId);\n\t\t} catch(err) {\n\t\t\tres.status(400).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.playerDao.delete(playerId);\n\t\t\tres.send({\n\t\t\t\tmessage: 'Player was deleted successfully!',\n\t\t\t});\n\t\t} catch(err){\n\t\t\tres.status(500).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t}\n\t}\n\n\tasync deleteAll(req, res) {\n\t\ttry {\n\t\t\tconst playerDeleteAllResult = await this.playerDao.deleteAll();\n\t\t\tres.send({\n\t\t\t\tmessage: 'Players were all deleted successfully!',\n\t\t\t});\n\t\t} catch(err){\n\t\t\tres.status(500).send({\n\t\t\t\tmessage: err.message,\n\t\t\t});\n\t\t}\n\t}\n}\n"]}